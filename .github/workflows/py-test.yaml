name: Python package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pip install pytest
          pip install pytest-cov
          pytest tests/unit/test_api_login.py  --doctest-modules --junitxml=junit/test-results.xml --cov=login --cov-report=xml --cov-report=html
          pytest tests/unit/test_api_user.py  --doctest-modules --junitxml=junit/test-results.xml --cov=users --cov-report=xml --cov-report=html
          pytest tests/unit/test_service_api.py  --doctest-modules --junitxml=junit/test-results.xml --cov=services --cov-report=xml --cov-report=html
          pytest tests/unit/test_service_model.py  --doctest-modules --junitxml=junit/test-results.xml --cov=service --cov-report=xml --cov-report=html
          pytest tests/unit/test_user_model.py  --doctest-modules --junitxml=junit/test-results.xml --cov=user --cov-report=xml --cov-report=html
          pytest tests/unit/test_contracted_service_api.py  --doctest-modules --junitxml=junit/test-results.xml --cov=contracted_services --cov-report=xml --cov-report=html
          pytest tests/unit/test_contracted_service_model.py  --doctest-modules --junitxml=junit/test-results.xml --cov=contracted_service --cov-report=xml --cov-report=html
          pytest tests/unit/test_reviews_api.py  --doctest-modules --junitxml=junit/test-results.xml --cov=reviews --cov-report=xml --cov-report=html

